services:
  # zookeeper是kafka的依赖 - Zookeeper is the dependencies of Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    volumes:
      - ./data/zookeeper/data:/data
      - /etc/localtime:/etc/localtime
    restart: always
    ports:
      - 127.0.0.1:2181:2181
    networks:
      - pwm_net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 127.0.0.1:9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Inbox-T:1:0,Sync-T:1:0"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    restart: always
    volumes:
      - ./data/kafka/data:/data
    networks:
      - pwm_net
    depends_on:
      - zookeeper

  etcd:
    image: quay.io/coreos/etcd:v3.5.2
    ports:
      - 127.0.0.1:2379:2379
      - 127.0.0.1:2380:2380
    container_name: etcd
    volumes:
      - ./data/etcd/data:/data
      - /etc/timezone:/etc/timezone
      - /etc/localtime:/etc/localtime:ro
    environment:
      ETCDCTL_API: 3
      ETCD_DATA_DIR: /data
      ETCD_NAME: node1
      INITIAL_CLUSTER_TOKEN: etcd-test-cluster
      ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd:2380
      ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_INITIAL_CLUSTER: node1=http://etcd:2380
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_AUTO_COMPACTION_RETENTION: 1
    restart: always
    command: /usr/local/bin/etcd
    networks:
      - pwm_net

  redis:
    image: redis
    container_name: redis
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - ./data/redis/data:/data:rw
    environment:
      TZ: Europe/Moscow
    restart: always
    privileged: true
    command: redis-server --appendonly yes
    networks:
      - pwm_net

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass123456a
      MYSQL_DATABASE: pwm
      MYSQL_USER: pwm
      MYSQL_PASSWORD: pass123456a
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - ./data/mysql/data:/var/lib/mysql
      - ./pwm/sql:/docker-entrypoint-initdb.d/
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    privileged: true
    restart: always
    networks:
      - pwm_net

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio/data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: pwm1234aa
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - pwm_net

  minio_mc:
    image: minio/mc:latest
    container_name: minio_mc
    volumes:
      - ./minio_init.sh:/minio_init.sh
    entrypoint: /minio_init.sh
    networks:
      - pwm_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    restart: always
    ports:
      - 8090:80
    depends_on:
      - mysql
    networks:
      - pwm_net

networks:
  pwm_net:
    name: pwm_shared_network
    external: true
